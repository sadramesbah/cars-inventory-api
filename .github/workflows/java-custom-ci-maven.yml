# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This "Custom Made" workflow uses actions that are not certified by GitHub. They are provided by a third party and are governed
# by separate terms of service, privacy policy, and support documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Wait for MySQL to be ready
      run: |
        for i in {30..0}; do
          if mysqladmin ping -h"127.0.0.1" --silent; then
            break
          fi
          echo 'MySQL is unavailable - sleeping'
          sleep 1
        done
        if [ "$i" = 0 ]; then
          echo 'MySQL did not start in time'
          exit 1
        fi

    - name: Create required table
      run: |
        mysql -h 127.0.0.1 -uroot -proot test_db <<EOF
        CREATE TABLE cars (
            car_id BIGINT AUTO_INCREMENT PRIMARY KEY,
            car_vin VARCHAR(17) NOT NULL,
            car_make VARCHAR(50) NOT NULL,
            car_model VARCHAR(50) NOT NULL,
            car_year INT NOT NULL,
            car_color VARCHAR(20) NOT NULL,
            car_mileage INT NOT NULL,
            car_price DECIMAL(10, 2) NOT NULL
        );
        EOF

    - name: Set environment variables
      run: |
        echo "SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/test_db" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_USERNAME=root" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_PASSWORD=root" >> $GITHUB_ENV
        echo "SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop" >> $GITHUB_ENV
        echo "SPRING_JPA_SHOW_SQL=true" >> $GITHUB_ENV

    - name: Build with Maven
      run: mvn -B package --file pom.xml
